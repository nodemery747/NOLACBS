name: Stream Ritual ‚Äì WVUE or WWL

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Choose which stream to record"
        required: true
        default: "wvue"
        type: choice
        options:
          - wvue
          - wwl

jobs:
  record:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # ‚è±Ô∏è Ritual window: 6 hours max

    steps:
      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Purge Runner Cache
        run: |
          echo "üßπ Clearing temp cache at $(date)"
          sudo rm -rf /tmp/*

      - name: Record Selected Stream
        env:
          TARGET: ${{ github.event.inputs.target }}
        run: |
          timestamp=$(date +%Y%m%d_%H%M%S)
          echo "üéôÔ∏è Invoking stream ritual for $TARGET at $(date)"

          if [[ "$TARGET" == "wvue" ]]; then
            echo "üì° Recording WVUE stream for 3 hours and 15 minutes..."
            timeout 11700 ffmpeg -nostdin \
              -headers "User-Agent: VLC/3.0.11\r\nAccept: */*\r\nConnection: keep-alive" \
              -reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 2 \
              -fflags +genpts -timeout 3000000 \
              -loglevel debug \
              -i "${{ secrets.WVUE_STREAM_URL }}" \
              -t 03:15:00 -c copy "wvue_capture_${timestamp}.mp4" || {
                echo "‚ùå WVUE stream failed. No fallback invoked."
                exit 1
              }

          elif [[ "$TARGET" == "wwl" ]]; then
            echo "üì° Recording WWL (CBS) stream for 3 hours and 15 minutes..."
            timeout 11700 ffmpeg -nostdin \
              -headers "User-Agent: VLC/3.0.11\r\nAccept: */*\r\nConnection: keep-alive" \
              -loglevel debug \
              -i "${{ secrets.WWL_STREAM_URL }}" \
              -t 03:15:00 -c copy "wwl_capture_${timestamp}.mp4" || {
                echo "‚ùå WWL stream failed. No fallback invoked."
                exit 1
              }

          else
            echo "‚ùå Invalid stream selection: $TARGET"
            exit 1
          fi

          echo "üé¨ Recording complete at $(date)"

      - name: Log File Size
        if: always()
        run: ls -lh *.mp4

      - name: Check File Size
        if: always()
        run: |
          for file in *.mp4; do
            size=$(du -m "$file" | cut -f1)
            if [ "$size" -gt 2048 ]; then
              echo "‚ö†Ô∏è $file exceeds 2GB artifact limit ($size MB). Removing to prevent truncation."
              rm "$file"
            fi
          done

      - name: Upload WVUE Artifact
        if: always() && github.event.inputs.target == 'wvue'
        uses: actions/upload-artifact@v4
        with:
          name: wvue_capture_${{ github.run_id }}
          path: wvue_capture_*.mp4

      - name: Upload WWL Artifact
        if: always() && github.event.inputs.target == 'wwl'
        uses: actions/upload-artifact@v4
        with:
          name: wwl_capture_${{ github.run_id }}
          path: wwl_capture_*.mp4

      - name: Confirm Completion
        run: echo "‚úÖ Stream ritual complete at $(date)"